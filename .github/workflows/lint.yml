name: Lint
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    needs: detect-modules
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Set up Go
        uses: ./.github/actions/setup-go-with-cache
      - name: Run golangci-lint for ${{ matrix.module }}
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.3.0
          working-directory: ${{ matrix.module }}

  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.list-modules.outputs.modules }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Set up Go
        uses: ./.github/actions/setup-go-with-cache
      - name: List modules in Go workspace
        id: list-modules
        run: |-
          modules=$(go work edit -json | jq -c -r '[.Use[].DiskPath]')
          cat >>"$GITHUB_OUTPUT" <<EOF
          modules=$modules
          EOF

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Create config
        run: |-
          cat >commitlint.config.cjs <<EOF
          module.exports = {
            extends: ['@commitlint/config-conventional'],
            rules: {
              'body-max-line-length': [0],
            },
          }
          EOF
      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v6.2.1
