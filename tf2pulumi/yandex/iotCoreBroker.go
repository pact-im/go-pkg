// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows management of [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart).
//
// The service is at the Preview stage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"go.pact.im/x/tf2pulumi/yandex"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewIotCoreBroker(ctx, "myBroker", &yandex.IotCoreBrokerArgs{
// 			Certificates: pulumi.StringArray{
// 				pulumi.String("public part of certificate1"),
// 				pulumi.String("public part of certificate2"),
// 			},
// 			Description: pulumi.String("any description"),
// 			Labels: pulumi.StringMap{
// 				"my-label": pulumi.String("my-label-value"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type IotCoreBroker struct {
	pulumi.CustomResourceState

	// A set of certificate's fingerprints for the IoT Core Broker
	Certificates pulumi.StringArrayOutput `pulumi:"certificates"`
	// Creation timestamp of the IoT Core Broker
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the IoT Core Broker
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Folder ID for the IoT Core Broker
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the IoT Core Broker.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// IoT Core Broker name used to define broker
	Name     pulumi.StringOutput         `pulumi:"name"`
	Timeouts IotCoreBrokerTimeoutsOutput `pulumi:"timeouts"`
}

// NewIotCoreBroker registers a new resource with the given unique name, arguments, and options.
func NewIotCoreBroker(ctx *pulumi.Context,
	name string, args *IotCoreBrokerArgs, opts ...pulumi.ResourceOption) (*IotCoreBroker, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Timeouts == nil {
		return nil, errors.New("invalid value for required argument 'Timeouts'")
	}
	var resource IotCoreBroker
	err := ctx.RegisterResource("yandex:index/iotCoreBroker:IotCoreBroker", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIotCoreBroker gets an existing IotCoreBroker resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIotCoreBroker(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IotCoreBrokerState, opts ...pulumi.ResourceOption) (*IotCoreBroker, error) {
	var resource IotCoreBroker
	err := ctx.ReadResource("yandex:index/iotCoreBroker:IotCoreBroker", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IotCoreBroker resources.
type iotCoreBrokerState struct {
	// A set of certificate's fingerprints for the IoT Core Broker
	Certificates []string `pulumi:"certificates"`
	// Creation timestamp of the IoT Core Broker
	CreatedAt *string `pulumi:"createdAt"`
	// Description of the IoT Core Broker
	Description *string `pulumi:"description"`
	// Folder ID for the IoT Core Broker
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the IoT Core Broker.
	Labels map[string]string `pulumi:"labels"`
	// IoT Core Broker name used to define broker
	Name     *string                `pulumi:"name"`
	Timeouts *IotCoreBrokerTimeouts `pulumi:"timeouts"`
}

type IotCoreBrokerState struct {
	// A set of certificate's fingerprints for the IoT Core Broker
	Certificates pulumi.StringArrayInput
	// Creation timestamp of the IoT Core Broker
	CreatedAt pulumi.StringPtrInput
	// Description of the IoT Core Broker
	Description pulumi.StringPtrInput
	// Folder ID for the IoT Core Broker
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the IoT Core Broker.
	Labels pulumi.StringMapInput
	// IoT Core Broker name used to define broker
	Name     pulumi.StringPtrInput
	Timeouts IotCoreBrokerTimeoutsPtrInput
}

func (IotCoreBrokerState) ElementType() reflect.Type {
	return reflect.TypeOf((*iotCoreBrokerState)(nil)).Elem()
}

type iotCoreBrokerArgs struct {
	// A set of certificate's fingerprints for the IoT Core Broker
	Certificates []string `pulumi:"certificates"`
	// Description of the IoT Core Broker
	Description *string `pulumi:"description"`
	// Folder ID for the IoT Core Broker
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the IoT Core Broker.
	Labels map[string]string `pulumi:"labels"`
	// IoT Core Broker name used to define broker
	Name     *string               `pulumi:"name"`
	Timeouts IotCoreBrokerTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IotCoreBroker resource.
type IotCoreBrokerArgs struct {
	// A set of certificate's fingerprints for the IoT Core Broker
	Certificates pulumi.StringArrayInput
	// Description of the IoT Core Broker
	Description pulumi.StringPtrInput
	// Folder ID for the IoT Core Broker
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the IoT Core Broker.
	Labels pulumi.StringMapInput
	// IoT Core Broker name used to define broker
	Name     pulumi.StringPtrInput
	Timeouts IotCoreBrokerTimeoutsInput
}

func (IotCoreBrokerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iotCoreBrokerArgs)(nil)).Elem()
}

type IotCoreBrokerInput interface {
	pulumi.Input

	ToIotCoreBrokerOutput() IotCoreBrokerOutput
	ToIotCoreBrokerOutputWithContext(ctx context.Context) IotCoreBrokerOutput
}

func (*IotCoreBroker) ElementType() reflect.Type {
	return reflect.TypeOf((**IotCoreBroker)(nil)).Elem()
}

func (i *IotCoreBroker) ToIotCoreBrokerOutput() IotCoreBrokerOutput {
	return i.ToIotCoreBrokerOutputWithContext(context.Background())
}

func (i *IotCoreBroker) ToIotCoreBrokerOutputWithContext(ctx context.Context) IotCoreBrokerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotCoreBrokerOutput)
}

// IotCoreBrokerArrayInput is an input type that accepts IotCoreBrokerArray and IotCoreBrokerArrayOutput values.
// You can construct a concrete instance of `IotCoreBrokerArrayInput` via:
//
//          IotCoreBrokerArray{ IotCoreBrokerArgs{...} }
type IotCoreBrokerArrayInput interface {
	pulumi.Input

	ToIotCoreBrokerArrayOutput() IotCoreBrokerArrayOutput
	ToIotCoreBrokerArrayOutputWithContext(context.Context) IotCoreBrokerArrayOutput
}

type IotCoreBrokerArray []IotCoreBrokerInput

func (IotCoreBrokerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IotCoreBroker)(nil)).Elem()
}

func (i IotCoreBrokerArray) ToIotCoreBrokerArrayOutput() IotCoreBrokerArrayOutput {
	return i.ToIotCoreBrokerArrayOutputWithContext(context.Background())
}

func (i IotCoreBrokerArray) ToIotCoreBrokerArrayOutputWithContext(ctx context.Context) IotCoreBrokerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotCoreBrokerArrayOutput)
}

// IotCoreBrokerMapInput is an input type that accepts IotCoreBrokerMap and IotCoreBrokerMapOutput values.
// You can construct a concrete instance of `IotCoreBrokerMapInput` via:
//
//          IotCoreBrokerMap{ "key": IotCoreBrokerArgs{...} }
type IotCoreBrokerMapInput interface {
	pulumi.Input

	ToIotCoreBrokerMapOutput() IotCoreBrokerMapOutput
	ToIotCoreBrokerMapOutputWithContext(context.Context) IotCoreBrokerMapOutput
}

type IotCoreBrokerMap map[string]IotCoreBrokerInput

func (IotCoreBrokerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IotCoreBroker)(nil)).Elem()
}

func (i IotCoreBrokerMap) ToIotCoreBrokerMapOutput() IotCoreBrokerMapOutput {
	return i.ToIotCoreBrokerMapOutputWithContext(context.Background())
}

func (i IotCoreBrokerMap) ToIotCoreBrokerMapOutputWithContext(ctx context.Context) IotCoreBrokerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotCoreBrokerMapOutput)
}

type IotCoreBrokerOutput struct{ *pulumi.OutputState }

func (IotCoreBrokerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotCoreBroker)(nil)).Elem()
}

func (o IotCoreBrokerOutput) ToIotCoreBrokerOutput() IotCoreBrokerOutput {
	return o
}

func (o IotCoreBrokerOutput) ToIotCoreBrokerOutputWithContext(ctx context.Context) IotCoreBrokerOutput {
	return o
}

// A set of certificate's fingerprints for the IoT Core Broker
func (o IotCoreBrokerOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IotCoreBroker) pulumi.StringArrayOutput { return v.Certificates }).(pulumi.StringArrayOutput)
}

// Creation timestamp of the IoT Core Broker
func (o IotCoreBrokerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *IotCoreBroker) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the IoT Core Broker
func (o IotCoreBrokerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotCoreBroker) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Folder ID for the IoT Core Broker
func (o IotCoreBrokerOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *IotCoreBroker) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs to assign to the IoT Core Broker.
func (o IotCoreBrokerOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IotCoreBroker) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// IoT Core Broker name used to define broker
func (o IotCoreBrokerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IotCoreBroker) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IotCoreBrokerOutput) Timeouts() IotCoreBrokerTimeoutsOutput {
	return o.ApplyT(func(v *IotCoreBroker) IotCoreBrokerTimeoutsOutput { return v.Timeouts }).(IotCoreBrokerTimeoutsOutput)
}

type IotCoreBrokerArrayOutput struct{ *pulumi.OutputState }

func (IotCoreBrokerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IotCoreBroker)(nil)).Elem()
}

func (o IotCoreBrokerArrayOutput) ToIotCoreBrokerArrayOutput() IotCoreBrokerArrayOutput {
	return o
}

func (o IotCoreBrokerArrayOutput) ToIotCoreBrokerArrayOutputWithContext(ctx context.Context) IotCoreBrokerArrayOutput {
	return o
}

func (o IotCoreBrokerArrayOutput) Index(i pulumi.IntInput) IotCoreBrokerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IotCoreBroker {
		return vs[0].([]*IotCoreBroker)[vs[1].(int)]
	}).(IotCoreBrokerOutput)
}

type IotCoreBrokerMapOutput struct{ *pulumi.OutputState }

func (IotCoreBrokerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IotCoreBroker)(nil)).Elem()
}

func (o IotCoreBrokerMapOutput) ToIotCoreBrokerMapOutput() IotCoreBrokerMapOutput {
	return o
}

func (o IotCoreBrokerMapOutput) ToIotCoreBrokerMapOutputWithContext(ctx context.Context) IotCoreBrokerMapOutput {
	return o
}

func (o IotCoreBrokerMapOutput) MapIndex(k pulumi.StringInput) IotCoreBrokerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IotCoreBroker {
		return vs[0].(map[string]*IotCoreBroker)[vs[1].(string)]
	}).(IotCoreBrokerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IotCoreBrokerInput)(nil)).Elem(), &IotCoreBroker{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotCoreBrokerArrayInput)(nil)).Elem(), IotCoreBrokerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotCoreBrokerMapInput)(nil)).Elem(), IotCoreBrokerMap{})
	pulumi.RegisterOutputType(IotCoreBrokerOutput{})
	pulumi.RegisterOutputType(IotCoreBrokerArrayOutput{})
	pulumi.RegisterOutputType(IotCoreBrokerMapOutput{})
}
