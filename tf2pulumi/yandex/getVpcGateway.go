// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex VPC gateway. For more information, see
// [Yandex.Cloud VPC](https://cloud.yandex.com/docs/vpc/concepts/index).
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"go.pact.im/x/tf2pulumi/yandex"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err = yandex.LookupVpcGateway(ctx, &GetVpcGatewayArgs{
// 			GatewayId: pulumi.StringRef("my-gateway-id"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// This data source is used to define [VPC Gateways] that can be used by other resources.
func LookupVpcGateway(ctx *pulumi.Context, args *LookupVpcGatewayArgs, opts ...pulumi.InvokeOption) (*LookupVpcGatewayResult, error) {
	var rv LookupVpcGatewayResult
	err := ctx.Invoke("yandex:index/getVpcGateway:getVpcGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcGateway.
type LookupVpcGatewayArgs struct {
	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// ID of the VPC Gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Name of the VPC Gateway.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getVpcGateway.
type LookupVpcGatewayResult struct {
	// Creation timestamp of this VPC Gateway.
	CreatedAt string `pulumi:"createdAt"`
	// Description of the VPC Gateway.
	Description string `pulumi:"description"`
	FolderId    string `pulumi:"folderId"`
	GatewayId   string `pulumi:"gatewayId"`
	Id          string `pulumi:"id"`
	// Labels assigned to this VPC Gateway.
	Labels map[string]string `pulumi:"labels"`
	Name   string            `pulumi:"name"`
	// Shared egress gateway configuration
	SharedEgressGateway GetVpcGatewaySharedEgressGateway `pulumi:"sharedEgressGateway"`
}

func LookupVpcGatewayOutput(ctx *pulumi.Context, args LookupVpcGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupVpcGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcGatewayResult, error) {
			args := v.(LookupVpcGatewayArgs)
			r, err := LookupVpcGateway(ctx, &args, opts...)
			var s LookupVpcGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcGatewayResultOutput)
}

// A collection of arguments for invoking getVpcGateway.
type LookupVpcGatewayOutputArgs struct {
	// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// ID of the VPC Gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Name of the VPC Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupVpcGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcGatewayArgs)(nil)).Elem()
}

// A collection of values returned by getVpcGateway.
type LookupVpcGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupVpcGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcGatewayResult)(nil)).Elem()
}

func (o LookupVpcGatewayResultOutput) ToLookupVpcGatewayResultOutput() LookupVpcGatewayResultOutput {
	return o
}

func (o LookupVpcGatewayResultOutput) ToLookupVpcGatewayResultOutputWithContext(ctx context.Context) LookupVpcGatewayResultOutput {
	return o
}

// Creation timestamp of this VPC Gateway.
func (o LookupVpcGatewayResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the VPC Gateway.
func (o LookupVpcGatewayResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupVpcGatewayResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) string { return v.FolderId }).(pulumi.StringOutput)
}

func (o LookupVpcGatewayResultOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) string { return v.GatewayId }).(pulumi.StringOutput)
}

func (o LookupVpcGatewayResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels assigned to this VPC Gateway.
func (o LookupVpcGatewayResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupVpcGatewayResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) string { return v.Name }).(pulumi.StringOutput)
}

// Shared egress gateway configuration
func (o LookupVpcGatewayResultOutput) SharedEgressGateway() GetVpcGatewaySharedEgressGatewayOutput {
	return o.ApplyT(func(v LookupVpcGatewayResult) GetVpcGatewaySharedEgressGateway { return v.SharedEgressGateway }).(GetVpcGatewaySharedEgressGatewayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcGatewayResultOutput{})
}
