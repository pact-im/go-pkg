// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Application Load Balancer. For more information, see
// [Yandex.Cloud Application Load Balancer](https://cloud.yandex.com/en/docs/application-load-balancer/quickstart).
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"go.pact.im/x/tf2pulumi/yandex"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err = yandex.LookupAlbLoadBalancer(ctx, &GetAlbLoadBalancerArgs{
// 			LoadBalancerId: pulumi.StringRef("my-alb-id"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// This data source is used to define [Application Load Balancer] that can be used by other resources.
func LookupAlbLoadBalancer(ctx *pulumi.Context, args *LookupAlbLoadBalancerArgs, opts ...pulumi.InvokeOption) (*LookupAlbLoadBalancerResult, error) {
	var rv LookupAlbLoadBalancerResult
	err := ctx.Invoke("yandex:index/getAlbLoadBalancer:getAlbLoadBalancer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlbLoadBalancer.
type LookupAlbLoadBalancerArgs struct {
	// Load Balancer ID.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// Name of the Load Balancer.
	Name     *string                    `pulumi:"name"`
	Timeouts GetAlbLoadBalancerTimeouts `pulumi:"timeouts"`
}

// A collection of values returned by getAlbLoadBalancer.
type LookupAlbLoadBalancerResult struct {
	// Allocation zones for the Load Balancer instance. The structure is documented below.
	AllocationPolicies []GetAlbLoadBalancerAllocationPolicy `pulumi:"allocationPolicies"`
	// The Load Balancer creation timestamp.
	CreatedAt string `pulumi:"createdAt"`
	// An optional description of the Load Balancer.
	Description string `pulumi:"description"`
	// The ID of the folder to which the resource belongs. If omitted, the provider folder is used.
	FolderId string `pulumi:"folderId"`
	Id       string `pulumi:"id"`
	// Labels to assign to this Load Balancer. A list of key/value pairs.
	Labels map[string]string `pulumi:"labels"`
	// List of listeners for the Load Balancer. The structure is documented below.
	Listeners      []GetAlbLoadBalancerListener `pulumi:"listeners"`
	LoadBalancerId string                       `pulumi:"loadBalancerId"`
	// Cloud log group used by the Load Balancer to store access logs.
	LogGroupId string `pulumi:"logGroupId"`
	// name of SNI match.
	Name string `pulumi:"name"`
	// ID of the network that the Load Balancer is located at.
	NetworkId string `pulumi:"networkId"`
	// ID of the region that the Load Balancer is located at.
	RegionId string `pulumi:"regionId"`
	// A list of ID's of security groups attached to the Load Balancer.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Status of the Load Balancer.
	Status   string                     `pulumi:"status"`
	Timeouts GetAlbLoadBalancerTimeouts `pulumi:"timeouts"`
}

func LookupAlbLoadBalancerOutput(ctx *pulumi.Context, args LookupAlbLoadBalancerOutputArgs, opts ...pulumi.InvokeOption) LookupAlbLoadBalancerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAlbLoadBalancerResult, error) {
			args := v.(LookupAlbLoadBalancerArgs)
			r, err := LookupAlbLoadBalancer(ctx, &args, opts...)
			var s LookupAlbLoadBalancerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAlbLoadBalancerResultOutput)
}

// A collection of arguments for invoking getAlbLoadBalancer.
type LookupAlbLoadBalancerOutputArgs struct {
	// Load Balancer ID.
	LoadBalancerId pulumi.StringPtrInput `pulumi:"loadBalancerId"`
	// Name of the Load Balancer.
	Name     pulumi.StringPtrInput           `pulumi:"name"`
	Timeouts GetAlbLoadBalancerTimeoutsInput `pulumi:"timeouts"`
}

func (LookupAlbLoadBalancerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlbLoadBalancerArgs)(nil)).Elem()
}

// A collection of values returned by getAlbLoadBalancer.
type LookupAlbLoadBalancerResultOutput struct{ *pulumi.OutputState }

func (LookupAlbLoadBalancerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlbLoadBalancerResult)(nil)).Elem()
}

func (o LookupAlbLoadBalancerResultOutput) ToLookupAlbLoadBalancerResultOutput() LookupAlbLoadBalancerResultOutput {
	return o
}

func (o LookupAlbLoadBalancerResultOutput) ToLookupAlbLoadBalancerResultOutputWithContext(ctx context.Context) LookupAlbLoadBalancerResultOutput {
	return o
}

// Allocation zones for the Load Balancer instance. The structure is documented below.
func (o LookupAlbLoadBalancerResultOutput) AllocationPolicies() GetAlbLoadBalancerAllocationPolicyArrayOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) []GetAlbLoadBalancerAllocationPolicy { return v.AllocationPolicies }).(GetAlbLoadBalancerAllocationPolicyArrayOutput)
}

// The Load Balancer creation timestamp.
func (o LookupAlbLoadBalancerResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// An optional description of the Load Balancer.
func (o LookupAlbLoadBalancerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the folder to which the resource belongs. If omitted, the provider folder is used.
func (o LookupAlbLoadBalancerResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.FolderId }).(pulumi.StringOutput)
}

func (o LookupAlbLoadBalancerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels to assign to this Load Balancer. A list of key/value pairs.
func (o LookupAlbLoadBalancerResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// List of listeners for the Load Balancer. The structure is documented below.
func (o LookupAlbLoadBalancerResultOutput) Listeners() GetAlbLoadBalancerListenerArrayOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) []GetAlbLoadBalancerListener { return v.Listeners }).(GetAlbLoadBalancerListenerArrayOutput)
}

func (o LookupAlbLoadBalancerResultOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// Cloud log group used by the Load Balancer to store access logs.
func (o LookupAlbLoadBalancerResultOutput) LogGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.LogGroupId }).(pulumi.StringOutput)
}

// name of SNI match.
func (o LookupAlbLoadBalancerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the network that the Load Balancer is located at.
func (o LookupAlbLoadBalancerResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// ID of the region that the Load Balancer is located at.
func (o LookupAlbLoadBalancerResultOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.RegionId }).(pulumi.StringOutput)
}

// A list of ID's of security groups attached to the Load Balancer.
func (o LookupAlbLoadBalancerResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Status of the Load Balancer.
func (o LookupAlbLoadBalancerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupAlbLoadBalancerResultOutput) Timeouts() GetAlbLoadBalancerTimeoutsOutput {
	return o.ApplyT(func(v LookupAlbLoadBalancerResult) GetAlbLoadBalancerTimeouts { return v.Timeouts }).(GetAlbLoadBalancerTimeoutsOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAlbLoadBalancerResultOutput{})
}
