// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex VPC Security Group Rule. For more information, see
// [Yandex.Cloud VPC](https://cloud.yandex.com/docs/vpc/concepts/security-groups).
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"go.pact.im/x/tf2pulumi/yandex"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err = yandex.LookupVpcSecurityGroupRule(ctx, &GetVpcSecurityGroupRuleArgs{
// 			RuleId:               "my-rule-id",
// 			SecurityGroupBinding: "my-sg-id",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// This data source used to define Security Group Rule that can be used by other resources.
func LookupVpcSecurityGroupRule(ctx *pulumi.Context, args *LookupVpcSecurityGroupRuleArgs, opts ...pulumi.InvokeOption) (*LookupVpcSecurityGroupRuleResult, error) {
	var rv LookupVpcSecurityGroupRuleResult
	err := ctx.Invoke("yandex:index/getVpcSecurityGroupRule:getVpcSecurityGroupRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcSecurityGroupRule.
type LookupVpcSecurityGroupRuleArgs struct {
	// - ID of the Security Group Rule.
	RuleId string `pulumi:"ruleId"`
	// ID of Security Group that owns the rule.
	SecurityGroupBinding string `pulumi:"securityGroupBinding"`
}

// A collection of values returned by getVpcSecurityGroupRule.
type LookupVpcSecurityGroupRuleResult struct {
	// Description of the rule.
	Description string `pulumi:"description"`
	// Direction of the rule. Can be `ingress` (inbound) or `egress` (outbound).
	Direction string `pulumi:"direction"`
	// Minimum port number.
	FromPort float64 `pulumi:"fromPort"`
	Id       string  `pulumi:"id"`
	// Labels to assign to this rule.
	Labels map[string]string `pulumi:"labels"`
	// Port number (if applied to a single port).
	Port float64 `pulumi:"port"`
	// Special-purpose targets. `selfSecurityGroup` refers to this particular security group. `loadbalancerHealthchecks` represents [loadbalancer health check nodes](https://cloud.yandex.com/docs/network-load-balancer/concepts/health-check).
	PredefinedTarget string `pulumi:"predefinedTarget"`
	// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
	Protocol             string `pulumi:"protocol"`
	RuleId               string `pulumi:"ruleId"`
	SecurityGroupBinding string `pulumi:"securityGroupBinding"`
	// Target security group ID for this rule.
	SecurityGroupId string `pulumi:"securityGroupId"`
	// Maximum port number.
	ToPort float64 `pulumi:"toPort"`
	// The blocks of  IPv4 addresses for this rule.
	V4CidrBlocks []string `pulumi:"v4CidrBlocks"`
	// The blocks of  IPv6 addresses for this rule.
	V6CidrBlocks []string `pulumi:"v6CidrBlocks"`
}

func LookupVpcSecurityGroupRuleOutput(ctx *pulumi.Context, args LookupVpcSecurityGroupRuleOutputArgs, opts ...pulumi.InvokeOption) LookupVpcSecurityGroupRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcSecurityGroupRuleResult, error) {
			args := v.(LookupVpcSecurityGroupRuleArgs)
			r, err := LookupVpcSecurityGroupRule(ctx, &args, opts...)
			var s LookupVpcSecurityGroupRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcSecurityGroupRuleResultOutput)
}

// A collection of arguments for invoking getVpcSecurityGroupRule.
type LookupVpcSecurityGroupRuleOutputArgs struct {
	// - ID of the Security Group Rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// ID of Security Group that owns the rule.
	SecurityGroupBinding pulumi.StringInput `pulumi:"securityGroupBinding"`
}

func (LookupVpcSecurityGroupRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcSecurityGroupRuleArgs)(nil)).Elem()
}

// A collection of values returned by getVpcSecurityGroupRule.
type LookupVpcSecurityGroupRuleResultOutput struct{ *pulumi.OutputState }

func (LookupVpcSecurityGroupRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcSecurityGroupRuleResult)(nil)).Elem()
}

func (o LookupVpcSecurityGroupRuleResultOutput) ToLookupVpcSecurityGroupRuleResultOutput() LookupVpcSecurityGroupRuleResultOutput {
	return o
}

func (o LookupVpcSecurityGroupRuleResultOutput) ToLookupVpcSecurityGroupRuleResultOutputWithContext(ctx context.Context) LookupVpcSecurityGroupRuleResultOutput {
	return o
}

// Description of the rule.
func (o LookupVpcSecurityGroupRuleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.Description }).(pulumi.StringOutput)
}

// Direction of the rule. Can be `ingress` (inbound) or `egress` (outbound).
func (o LookupVpcSecurityGroupRuleResultOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.Direction }).(pulumi.StringOutput)
}

// Minimum port number.
func (o LookupVpcSecurityGroupRuleResultOutput) FromPort() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) float64 { return v.FromPort }).(pulumi.Float64Output)
}

func (o LookupVpcSecurityGroupRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// Labels to assign to this rule.
func (o LookupVpcSecurityGroupRuleResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Port number (if applied to a single port).
func (o LookupVpcSecurityGroupRuleResultOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) float64 { return v.Port }).(pulumi.Float64Output)
}

// Special-purpose targets. `selfSecurityGroup` refers to this particular security group. `loadbalancerHealthchecks` represents [loadbalancer health check nodes](https://cloud.yandex.com/docs/network-load-balancer/concepts/health-check).
func (o LookupVpcSecurityGroupRuleResultOutput) PredefinedTarget() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.PredefinedTarget }).(pulumi.StringOutput)
}

// One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
func (o LookupVpcSecurityGroupRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LookupVpcSecurityGroupRuleResultOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.RuleId }).(pulumi.StringOutput)
}

func (o LookupVpcSecurityGroupRuleResultOutput) SecurityGroupBinding() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.SecurityGroupBinding }).(pulumi.StringOutput)
}

// Target security group ID for this rule.
func (o LookupVpcSecurityGroupRuleResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// Maximum port number.
func (o LookupVpcSecurityGroupRuleResultOutput) ToPort() pulumi.Float64Output {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) float64 { return v.ToPort }).(pulumi.Float64Output)
}

// The blocks of  IPv4 addresses for this rule.
func (o LookupVpcSecurityGroupRuleResultOutput) V4CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) []string { return v.V4CidrBlocks }).(pulumi.StringArrayOutput)
}

// The blocks of  IPv6 addresses for this rule.
func (o LookupVpcSecurityGroupRuleResultOutput) V6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcSecurityGroupRuleResult) []string { return v.V6CidrBlocks }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcSecurityGroupRuleResultOutput{})
}
