// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a address within the Yandex.Cloud. You can only create a reserved (static) address via this resource. An ephemeral address could be obtained via implicit creation at a compute instance creation only. For more information, see [the official documentation](https://cloud.yandex.com/docs/vpc/concepts/address).
//
// * How-to Guides
//     * [Cloud Networking](https://cloud.yandex.com/docs/vpc/)
//     * [VPC Addressing](https://cloud.yandex.com/docs/vpc/concepts/address)
//
// ## Example Usage
//
// ## Import
//
// A address can be imported using the `id` of the resource, e.g.
//
// ```sh
//  $ pulumi import yandex:index/vpcAddress:VpcAddress addr address_id
// ```
type VpcAddress struct {
	pulumi.CustomResourceState

	// Creation timestamp of the key.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// spec of IP v4 address
	// ---
	ExternalIpv4Address VpcAddressExternalIpv4AddressOutput `pulumi:"externalIpv4Address"`
	// ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Labels to apply to this resource. A list of key/value pairs.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the address. Provided by the client when the address is created.
	Name pulumi.StringOutput `pulumi:"name"`
	// `false` means that address is ephemeral.
	Reserved pulumi.BoolOutput        `pulumi:"reserved"`
	Timeouts VpcAddressTimeoutsOutput `pulumi:"timeouts"`
	// `true` if address is used.
	Used pulumi.BoolOutput `pulumi:"used"`
}

// NewVpcAddress registers a new resource with the given unique name, arguments, and options.
func NewVpcAddress(ctx *pulumi.Context,
	name string, args *VpcAddressArgs, opts ...pulumi.ResourceOption) (*VpcAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Timeouts == nil {
		return nil, errors.New("invalid value for required argument 'Timeouts'")
	}
	var resource VpcAddress
	err := ctx.RegisterResource("yandex:index/vpcAddress:VpcAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAddress gets an existing VpcAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAddressState, opts ...pulumi.ResourceOption) (*VpcAddress, error) {
	var resource VpcAddress
	err := ctx.ReadResource("yandex:index/vpcAddress:VpcAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAddress resources.
type vpcAddressState struct {
	// Creation timestamp of the key.
	CreatedAt *string `pulumi:"createdAt"`
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description *string `pulumi:"description"`
	// spec of IP v4 address
	// ---
	ExternalIpv4Address *VpcAddressExternalIpv4Address `pulumi:"externalIpv4Address"`
	// ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// Labels to apply to this resource. A list of key/value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Name of the address. Provided by the client when the address is created.
	Name *string `pulumi:"name"`
	// `false` means that address is ephemeral.
	Reserved *bool               `pulumi:"reserved"`
	Timeouts *VpcAddressTimeouts `pulumi:"timeouts"`
	// `true` if address is used.
	Used *bool `pulumi:"used"`
}

type VpcAddressState struct {
	// Creation timestamp of the key.
	CreatedAt pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrInput
	// spec of IP v4 address
	// ---
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrInput
	// ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// Labels to apply to this resource. A list of key/value pairs.
	Labels pulumi.StringMapInput
	// Name of the address. Provided by the client when the address is created.
	Name pulumi.StringPtrInput
	// `false` means that address is ephemeral.
	Reserved pulumi.BoolPtrInput
	Timeouts VpcAddressTimeoutsPtrInput
	// `true` if address is used.
	Used pulumi.BoolPtrInput
}

func (VpcAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressState)(nil)).Elem()
}

type vpcAddressArgs struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description *string `pulumi:"description"`
	// ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// Labels to apply to this resource. A list of key/value pairs.
	Labels map[string]string `pulumi:"labels"`
	// Name of the address. Provided by the client when the address is created.
	Name     *string            `pulumi:"name"`
	Timeouts VpcAddressTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a VpcAddress resource.
type VpcAddressArgs struct {
	// An optional description of this resource. Provide this property when
	// you create the resource.
	Description pulumi.StringPtrInput
	// ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// Labels to apply to this resource. A list of key/value pairs.
	Labels pulumi.StringMapInput
	// Name of the address. Provided by the client when the address is created.
	Name     pulumi.StringPtrInput
	Timeouts VpcAddressTimeoutsInput
}

func (VpcAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressArgs)(nil)).Elem()
}

type VpcAddressInput interface {
	pulumi.Input

	ToVpcAddressOutput() VpcAddressOutput
	ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput
}

func (*VpcAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddress)(nil)).Elem()
}

func (i *VpcAddress) ToVpcAddressOutput() VpcAddressOutput {
	return i.ToVpcAddressOutputWithContext(context.Background())
}

func (i *VpcAddress) ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressOutput)
}

// VpcAddressArrayInput is an input type that accepts VpcAddressArray and VpcAddressArrayOutput values.
// You can construct a concrete instance of `VpcAddressArrayInput` via:
//
//          VpcAddressArray{ VpcAddressArgs{...} }
type VpcAddressArrayInput interface {
	pulumi.Input

	ToVpcAddressArrayOutput() VpcAddressArrayOutput
	ToVpcAddressArrayOutputWithContext(context.Context) VpcAddressArrayOutput
}

type VpcAddressArray []VpcAddressInput

func (VpcAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAddress)(nil)).Elem()
}

func (i VpcAddressArray) ToVpcAddressArrayOutput() VpcAddressArrayOutput {
	return i.ToVpcAddressArrayOutputWithContext(context.Background())
}

func (i VpcAddressArray) ToVpcAddressArrayOutputWithContext(ctx context.Context) VpcAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressArrayOutput)
}

// VpcAddressMapInput is an input type that accepts VpcAddressMap and VpcAddressMapOutput values.
// You can construct a concrete instance of `VpcAddressMapInput` via:
//
//          VpcAddressMap{ "key": VpcAddressArgs{...} }
type VpcAddressMapInput interface {
	pulumi.Input

	ToVpcAddressMapOutput() VpcAddressMapOutput
	ToVpcAddressMapOutputWithContext(context.Context) VpcAddressMapOutput
}

type VpcAddressMap map[string]VpcAddressInput

func (VpcAddressMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAddress)(nil)).Elem()
}

func (i VpcAddressMap) ToVpcAddressMapOutput() VpcAddressMapOutput {
	return i.ToVpcAddressMapOutputWithContext(context.Background())
}

func (i VpcAddressMap) ToVpcAddressMapOutputWithContext(ctx context.Context) VpcAddressMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressMapOutput)
}

type VpcAddressOutput struct{ *pulumi.OutputState }

func (VpcAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAddress)(nil)).Elem()
}

func (o VpcAddressOutput) ToVpcAddressOutput() VpcAddressOutput {
	return o
}

func (o VpcAddressOutput) ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput {
	return o
}

// Creation timestamp of the key.
func (o VpcAddressOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when
// you create the resource.
func (o VpcAddressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// spec of IP v4 address
// ---
func (o VpcAddressOutput) ExternalIpv4Address() VpcAddressExternalIpv4AddressOutput {
	return o.ApplyT(func(v *VpcAddress) VpcAddressExternalIpv4AddressOutput { return v.ExternalIpv4Address }).(VpcAddressExternalIpv4AddressOutput)
}

// ID of the folder that the resource belongs to. If it
// is not provided, the default provider folder is used.
func (o VpcAddressOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Labels to apply to this resource. A list of key/value pairs.
func (o VpcAddressOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the address. Provided by the client when the address is created.
func (o VpcAddressOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// `false` means that address is ephemeral.
func (o VpcAddressOutput) Reserved() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.BoolOutput { return v.Reserved }).(pulumi.BoolOutput)
}

func (o VpcAddressOutput) Timeouts() VpcAddressTimeoutsOutput {
	return o.ApplyT(func(v *VpcAddress) VpcAddressTimeoutsOutput { return v.Timeouts }).(VpcAddressTimeoutsOutput)
}

// `true` if address is used.
func (o VpcAddressOutput) Used() pulumi.BoolOutput {
	return o.ApplyT(func(v *VpcAddress) pulumi.BoolOutput { return v.Used }).(pulumi.BoolOutput)
}

type VpcAddressArrayOutput struct{ *pulumi.OutputState }

func (VpcAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcAddress)(nil)).Elem()
}

func (o VpcAddressArrayOutput) ToVpcAddressArrayOutput() VpcAddressArrayOutput {
	return o
}

func (o VpcAddressArrayOutput) ToVpcAddressArrayOutputWithContext(ctx context.Context) VpcAddressArrayOutput {
	return o
}

func (o VpcAddressArrayOutput) Index(i pulumi.IntInput) VpcAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcAddress {
		return vs[0].([]*VpcAddress)[vs[1].(int)]
	}).(VpcAddressOutput)
}

type VpcAddressMapOutput struct{ *pulumi.OutputState }

func (VpcAddressMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcAddress)(nil)).Elem()
}

func (o VpcAddressMapOutput) ToVpcAddressMapOutput() VpcAddressMapOutput {
	return o
}

func (o VpcAddressMapOutput) ToVpcAddressMapOutputWithContext(ctx context.Context) VpcAddressMapOutput {
	return o
}

func (o VpcAddressMapOutput) MapIndex(k pulumi.StringInput) VpcAddressOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcAddress {
		return vs[0].(map[string]*VpcAddress)[vs[1].(string)]
	}).(VpcAddressOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressInput)(nil)).Elem(), &VpcAddress{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressArrayInput)(nil)).Elem(), VpcAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAddressMapInput)(nil)).Elem(), VpcAddressMap{})
	pulumi.RegisterOutputType(VpcAddressOutput{})
	pulumi.RegisterOutputType(VpcAddressArrayOutput{})
	pulumi.RegisterOutputType(VpcAddressMapOutput{})
}
