// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex IoT Core Broker. For more information IoT Core, see
// [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart).
//
// The service is at the Preview stage.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"go.pact.im/x/tf2pulumi/yandex"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err = yandex.LookupIotCoreBroker(ctx, &GetIotCoreBrokerArgs{
// 			BrokerId: pulumi.StringRef("are1samplebroker11"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// This data source is used to define [Yandex.Cloud IoT Broker](https://cloud.yandex.com/docs/iot-core/quickstart) that can be used by other resources.
func LookupIotCoreBroker(ctx *pulumi.Context, args *LookupIotCoreBrokerArgs, opts ...pulumi.InvokeOption) (*LookupIotCoreBrokerResult, error) {
	var rv LookupIotCoreBrokerResult
	err := ctx.Invoke("yandex:index/getIotCoreBroker:getIotCoreBroker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIotCoreBroker.
type LookupIotCoreBrokerArgs struct {
	// IoT Core Broker id used to define broker
	BrokerId *string `pulumi:"brokerId"`
	// Folder ID for the IoT Core Broker
	FolderId *string `pulumi:"folderId"`
	// IoT Core Broker name used to define broker
	Name *string `pulumi:"name"`
}

// A collection of values returned by getIotCoreBroker.
type LookupIotCoreBrokerResult struct {
	BrokerId *string `pulumi:"brokerId"`
	// A set of certificates fingerprints for the IoT Core Broker
	Certificates []string `pulumi:"certificates"`
	// Creation timestamp of the IoT Core Broker
	CreatedAt string `pulumi:"createdAt"`
	// Description of the IoT Core Broker
	Description string  `pulumi:"description"`
	FolderId    *string `pulumi:"folderId"`
	Id          string  `pulumi:"id"`
	// A set of key/value label pairs to assign to the IoT Core Broker.
	Labels map[string]string `pulumi:"labels"`
	Name   *string           `pulumi:"name"`
}

func LookupIotCoreBrokerOutput(ctx *pulumi.Context, args LookupIotCoreBrokerOutputArgs, opts ...pulumi.InvokeOption) LookupIotCoreBrokerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIotCoreBrokerResult, error) {
			args := v.(LookupIotCoreBrokerArgs)
			r, err := LookupIotCoreBroker(ctx, &args, opts...)
			var s LookupIotCoreBrokerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIotCoreBrokerResultOutput)
}

// A collection of arguments for invoking getIotCoreBroker.
type LookupIotCoreBrokerOutputArgs struct {
	// IoT Core Broker id used to define broker
	BrokerId pulumi.StringPtrInput `pulumi:"brokerId"`
	// Folder ID for the IoT Core Broker
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// IoT Core Broker name used to define broker
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupIotCoreBrokerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotCoreBrokerArgs)(nil)).Elem()
}

// A collection of values returned by getIotCoreBroker.
type LookupIotCoreBrokerResultOutput struct{ *pulumi.OutputState }

func (LookupIotCoreBrokerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIotCoreBrokerResult)(nil)).Elem()
}

func (o LookupIotCoreBrokerResultOutput) ToLookupIotCoreBrokerResultOutput() LookupIotCoreBrokerResultOutput {
	return o
}

func (o LookupIotCoreBrokerResultOutput) ToLookupIotCoreBrokerResultOutputWithContext(ctx context.Context) LookupIotCoreBrokerResultOutput {
	return o
}

func (o LookupIotCoreBrokerResultOutput) BrokerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) *string { return v.BrokerId }).(pulumi.StringPtrOutput)
}

// A set of certificates fingerprints for the IoT Core Broker
func (o LookupIotCoreBrokerResultOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// Creation timestamp of the IoT Core Broker
func (o LookupIotCoreBrokerResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the IoT Core Broker
func (o LookupIotCoreBrokerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupIotCoreBrokerResultOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) *string { return v.FolderId }).(pulumi.StringPtrOutput)
}

func (o LookupIotCoreBrokerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of key/value label pairs to assign to the IoT Core Broker.
func (o LookupIotCoreBrokerResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupIotCoreBrokerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIotCoreBrokerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIotCoreBrokerResultOutput{})
}
