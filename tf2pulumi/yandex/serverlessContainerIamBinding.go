// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## yandex\_serverless\_container\_iam\_binding
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"go.pact.im/x/tf2pulumi/yandex"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := yandex.NewServerlessContainerIamBinding(ctx, "container-iam", &yandex.ServerlessContainerIamBindingArgs{
// 			ContainerId: pulumi.String("your-container-id"),
// 			Members: pulumi.StringArray{
// 				pulumi.String("system:allUsers"),
// 			},
// 			Role: pulumi.String("serverless.containers.invoker"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type ServerlessContainerIamBinding struct {
	pulumi.CustomResourceState

	// The [Yandex Serverless Container](https://cloud.yandex.com/docs/serverless-containers/) ID to apply a binding to.
	ContainerId pulumi.StringOutput `pulumi:"containerId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied.
	Role       pulumi.StringOutput     `pulumi:"role"`
	SleepAfter pulumi.Float64PtrOutput `pulumi:"sleepAfter"`
}

// NewServerlessContainerIamBinding registers a new resource with the given unique name, arguments, and options.
func NewServerlessContainerIamBinding(ctx *pulumi.Context,
	name string, args *ServerlessContainerIamBindingArgs, opts ...pulumi.ResourceOption) (*ServerlessContainerIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerId == nil {
		return nil, errors.New("invalid value for required argument 'ContainerId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	var resource ServerlessContainerIamBinding
	err := ctx.RegisterResource("yandex:index/serverlessContainerIamBinding:ServerlessContainerIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessContainerIamBinding gets an existing ServerlessContainerIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessContainerIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessContainerIamBindingState, opts ...pulumi.ResourceOption) (*ServerlessContainerIamBinding, error) {
	var resource ServerlessContainerIamBinding
	err := ctx.ReadResource("yandex:index/serverlessContainerIamBinding:ServerlessContainerIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessContainerIamBinding resources.
type serverlessContainerIamBindingState struct {
	// The [Yandex Serverless Container](https://cloud.yandex.com/docs/serverless-containers/) ID to apply a binding to.
	ContainerId *string `pulumi:"containerId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied.
	Role       *string  `pulumi:"role"`
	SleepAfter *float64 `pulumi:"sleepAfter"`
}

type ServerlessContainerIamBindingState struct {
	// The [Yandex Serverless Container](https://cloud.yandex.com/docs/serverless-containers/) ID to apply a binding to.
	ContainerId pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied.
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.Float64PtrInput
}

func (ServerlessContainerIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessContainerIamBindingState)(nil)).Elem()
}

type serverlessContainerIamBindingArgs struct {
	// The [Yandex Serverless Container](https://cloud.yandex.com/docs/serverless-containers/) ID to apply a binding to.
	ContainerId string `pulumi:"containerId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members []string `pulumi:"members"`
	// The role that should be applied.
	Role       string   `pulumi:"role"`
	SleepAfter *float64 `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a ServerlessContainerIamBinding resource.
type ServerlessContainerIamBindingArgs struct {
	// The [Yandex Serverless Container](https://cloud.yandex.com/docs/serverless-containers/) ID to apply a binding to.
	ContainerId pulumi.StringInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
	Members pulumi.StringArrayInput
	// The role that should be applied.
	Role       pulumi.StringInput
	SleepAfter pulumi.Float64PtrInput
}

func (ServerlessContainerIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessContainerIamBindingArgs)(nil)).Elem()
}

type ServerlessContainerIamBindingInput interface {
	pulumi.Input

	ToServerlessContainerIamBindingOutput() ServerlessContainerIamBindingOutput
	ToServerlessContainerIamBindingOutputWithContext(ctx context.Context) ServerlessContainerIamBindingOutput
}

func (*ServerlessContainerIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessContainerIamBinding)(nil)).Elem()
}

func (i *ServerlessContainerIamBinding) ToServerlessContainerIamBindingOutput() ServerlessContainerIamBindingOutput {
	return i.ToServerlessContainerIamBindingOutputWithContext(context.Background())
}

func (i *ServerlessContainerIamBinding) ToServerlessContainerIamBindingOutputWithContext(ctx context.Context) ServerlessContainerIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerIamBindingOutput)
}

// ServerlessContainerIamBindingArrayInput is an input type that accepts ServerlessContainerIamBindingArray and ServerlessContainerIamBindingArrayOutput values.
// You can construct a concrete instance of `ServerlessContainerIamBindingArrayInput` via:
//
//          ServerlessContainerIamBindingArray{ ServerlessContainerIamBindingArgs{...} }
type ServerlessContainerIamBindingArrayInput interface {
	pulumi.Input

	ToServerlessContainerIamBindingArrayOutput() ServerlessContainerIamBindingArrayOutput
	ToServerlessContainerIamBindingArrayOutputWithContext(context.Context) ServerlessContainerIamBindingArrayOutput
}

type ServerlessContainerIamBindingArray []ServerlessContainerIamBindingInput

func (ServerlessContainerIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessContainerIamBinding)(nil)).Elem()
}

func (i ServerlessContainerIamBindingArray) ToServerlessContainerIamBindingArrayOutput() ServerlessContainerIamBindingArrayOutput {
	return i.ToServerlessContainerIamBindingArrayOutputWithContext(context.Background())
}

func (i ServerlessContainerIamBindingArray) ToServerlessContainerIamBindingArrayOutputWithContext(ctx context.Context) ServerlessContainerIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerIamBindingArrayOutput)
}

// ServerlessContainerIamBindingMapInput is an input type that accepts ServerlessContainerIamBindingMap and ServerlessContainerIamBindingMapOutput values.
// You can construct a concrete instance of `ServerlessContainerIamBindingMapInput` via:
//
//          ServerlessContainerIamBindingMap{ "key": ServerlessContainerIamBindingArgs{...} }
type ServerlessContainerIamBindingMapInput interface {
	pulumi.Input

	ToServerlessContainerIamBindingMapOutput() ServerlessContainerIamBindingMapOutput
	ToServerlessContainerIamBindingMapOutputWithContext(context.Context) ServerlessContainerIamBindingMapOutput
}

type ServerlessContainerIamBindingMap map[string]ServerlessContainerIamBindingInput

func (ServerlessContainerIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessContainerIamBinding)(nil)).Elem()
}

func (i ServerlessContainerIamBindingMap) ToServerlessContainerIamBindingMapOutput() ServerlessContainerIamBindingMapOutput {
	return i.ToServerlessContainerIamBindingMapOutputWithContext(context.Background())
}

func (i ServerlessContainerIamBindingMap) ToServerlessContainerIamBindingMapOutputWithContext(ctx context.Context) ServerlessContainerIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerIamBindingMapOutput)
}

type ServerlessContainerIamBindingOutput struct{ *pulumi.OutputState }

func (ServerlessContainerIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessContainerIamBinding)(nil)).Elem()
}

func (o ServerlessContainerIamBindingOutput) ToServerlessContainerIamBindingOutput() ServerlessContainerIamBindingOutput {
	return o
}

func (o ServerlessContainerIamBindingOutput) ToServerlessContainerIamBindingOutputWithContext(ctx context.Context) ServerlessContainerIamBindingOutput {
	return o
}

// The [Yandex Serverless Container](https://cloud.yandex.com/docs/serverless-containers/) ID to apply a binding to.
func (o ServerlessContainerIamBindingOutput) ContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainerIamBinding) pulumi.StringOutput { return v.ContainerId }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
// * **serviceAccount:{service_account_id}**: A unique service account ID.
// * **system:{allUsers|allAuthenticatedUsers}**: see [system groups](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group)
func (o ServerlessContainerIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerlessContainerIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied.
func (o ServerlessContainerIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainerIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ServerlessContainerIamBindingOutput) SleepAfter() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerlessContainerIamBinding) pulumi.Float64PtrOutput { return v.SleepAfter }).(pulumi.Float64PtrOutput)
}

type ServerlessContainerIamBindingArrayOutput struct{ *pulumi.OutputState }

func (ServerlessContainerIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessContainerIamBinding)(nil)).Elem()
}

func (o ServerlessContainerIamBindingArrayOutput) ToServerlessContainerIamBindingArrayOutput() ServerlessContainerIamBindingArrayOutput {
	return o
}

func (o ServerlessContainerIamBindingArrayOutput) ToServerlessContainerIamBindingArrayOutputWithContext(ctx context.Context) ServerlessContainerIamBindingArrayOutput {
	return o
}

func (o ServerlessContainerIamBindingArrayOutput) Index(i pulumi.IntInput) ServerlessContainerIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessContainerIamBinding {
		return vs[0].([]*ServerlessContainerIamBinding)[vs[1].(int)]
	}).(ServerlessContainerIamBindingOutput)
}

type ServerlessContainerIamBindingMapOutput struct{ *pulumi.OutputState }

func (ServerlessContainerIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessContainerIamBinding)(nil)).Elem()
}

func (o ServerlessContainerIamBindingMapOutput) ToServerlessContainerIamBindingMapOutput() ServerlessContainerIamBindingMapOutput {
	return o
}

func (o ServerlessContainerIamBindingMapOutput) ToServerlessContainerIamBindingMapOutputWithContext(ctx context.Context) ServerlessContainerIamBindingMapOutput {
	return o
}

func (o ServerlessContainerIamBindingMapOutput) MapIndex(k pulumi.StringInput) ServerlessContainerIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessContainerIamBinding {
		return vs[0].(map[string]*ServerlessContainerIamBinding)[vs[1].(string)]
	}).(ServerlessContainerIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerIamBindingInput)(nil)).Elem(), &ServerlessContainerIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerIamBindingArrayInput)(nil)).Elem(), ServerlessContainerIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerIamBindingMapInput)(nil)).Elem(), ServerlessContainerIamBindingMap{})
	pulumi.RegisterOutputType(ServerlessContainerIamBindingOutput{})
	pulumi.RegisterOutputType(ServerlessContainerIamBindingArrayOutput{})
	pulumi.RegisterOutputType(ServerlessContainerIamBindingMapOutput{})
}
